//GreenBox.h

#pragma once

#include "CoreMinimal.h"
#include "GameFramework/Actor.h"
#include "GreenBox.generated.h"

//Step 1
DECLARE_DELEGATE(FMyDelegate)

UCLASS()
class CPPEVENTS_API AGreenBox : public AActor
{
	GENERATED_BODY()
	
public:	
	// Sets default values for this actor's properties
	AGreenBox();

protected:
	// Called when the game starts or when spawned
	virtual void BeginPlay() override;

public:	
	// Called every frame
	virtual void Tick(float DeltaTime) override;

	//Step 2
	FMyDelegate OnPrintToScreen;
	
};

//GreenBox.cpp

#include "GreenBox.h"


// Sets default values
AGreenBox::AGreenBox()
{
 	// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.
	PrimaryActorTick.bCanEverTick = true;

}

// Called when the game starts or when spawned
void AGreenBox::BeginPlay()
{
	Super::BeginPlay();

	//Step 3
	OnPrintToScreen.ExecuteIfBound();
	
}

// Called every frame
void AGreenBox::Tick(float DeltaTime)
{
	Super::Tick(DeltaTime);

}

//BlueBox.h

#pragma once

#include "CoreMinimal.h"
#include "GameFramework/Actor.h"
#include "BlueBox.generated.h"

UCLASS()
class CPPEVENTS_API ABlueBox : public AActor
{
	GENERATED_BODY()
	
public:	
	// Sets default values for this actor's properties
	ABlueBox();

protected:
	// Called when the game starts or when spawned
	virtual void BeginPlay() override;

public:	
	// Called every frame
	virtual void Tick(float DeltaTime) override;
	
	
};


//BLueBox.cpp

#include "BlueBox.h"
#include "GreenBox.h"
#include "Runtime/Engine/Classes/Kismet/GameplayStatics.h"
#include "Engine/Engine.h"


// Sets default values
ABlueBox::ABlueBox()
{
 	// Set this actor to call Tick() every frame.  You can turn this off to improve performance if you don't need it.
	PrimaryActorTick.bCanEverTick = true;

}

// Called when the game starts or when spawned
void ABlueBox::BeginPlay()
{
	Super::BeginPlay();

	TArray<AActor*> foundActors;

	UGameplayStatics::GetAllActorsOfClass(GetWorld(), AGreenBox::StaticClass(), foundActors);

	AGreenBox* greenBox = Cast<AGreenBox>(foundActors[0]);
	//Step 4
	greenBox->OnPrintToScreen.BindLambda([]() {
		UE_LOG(LogTemp, Warning, TEXT("BMW"));
		GEngine->AddOnScreenDebugMessage(12, 4.0f, FColor::Red, TEXT("BMW"));
	});

	
	
}

// Called every frame
void ABlueBox::Tick(float DeltaTime)
{
	Super::Tick(DeltaTime);

}


